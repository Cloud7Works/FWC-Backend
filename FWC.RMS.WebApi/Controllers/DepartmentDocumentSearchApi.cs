/*
 * Revenue Management System
 *
 * Florida Fish and Wildlife Conservation Commision - Revenue Management System.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@fwc.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using FWC.RMS.WebApi.Attributes;
using FWC.RMS.WebApi.Security;
using Microsoft.AspNetCore.Authorization;
using FWC.RMS.ApplicationCore.Dto;

namespace FWC.RMS.WebApi.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DepartmentDocumentSearchApiController : ControllerBase
    {
        /// <summary>
        /// Search Department Document records
        /// </summary>
        /// <param name="body">Department Document search request</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Bad request</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/v2/departmentDocumentSearch")]
        [ValidateModelState]
        [SwaggerOperation("SearchDepartmentDocuments")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DepartmentDocumentSearchResponse>), description: "successful operation")]
        public virtual IActionResult SearchDepartmentDocuments([FromBody] DepartmentDocumentSearchRequest body)
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DepartmentDocumentSearchResponse>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            string exampleJson = null;
            exampleJson = "[ {\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"checkNumber\" : 6,\n  \"depositNumber\" : 5,\n  \"checkAmount\" : 1.4658129805029452,\n  \"companyName\" : \"companyName\",\n  \"transmittalStatus\" : \"transmittalStatus\",\n  \"departmentDocumentNumber\" : 0,\n  \"checkDate\" : \"2000-01-23\",\n  \"transmittalNumber\" : 5,\n  \"cashListing\" : \"cashListing\"\n}, {\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"checkNumber\" : 6,\n  \"depositNumber\" : 5,\n  \"checkAmount\" : 1.4658129805029452,\n  \"companyName\" : \"companyName\",\n  \"transmittalStatus\" : \"transmittalStatus\",\n  \"departmentDocumentNumber\" : 0,\n  \"checkDate\" : \"2000-01-23\",\n  \"transmittalNumber\" : 5,\n  \"cashListing\" : \"cashListing\"\n} ]";

            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<DepartmentDocumentSearchResponse>>(exampleJson)
            : default(List<DepartmentDocumentSearchResponse>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Search Department Document records by keyword
        /// </summary>
        /// <param name="keyword">Search Keyword (FirstName or LastName)</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Bad request</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/v2/departmentDocumentSearch")]
        [ValidateModelState]
        [SwaggerOperation("SearchDepartmentDocumentsByKeyword")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DepartmentDocumentSearchResponse>), description: "successful operation")]
        public virtual IActionResult SearchDepartmentDocumentsByKeyword([FromQuery][Required()] string keyword)
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DepartmentDocumentSearchResponse>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            string exampleJson = null;
            exampleJson = "[ {\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"checkNumber\" : 6,\n  \"depositNumber\" : 5,\n  \"checkAmount\" : 1.4658129805029452,\n  \"companyName\" : \"companyName\",\n  \"transmittalStatus\" : \"transmittalStatus\",\n  \"departmentDocumentNumber\" : 0,\n  \"checkDate\" : \"2000-01-23\",\n  \"transmittalNumber\" : 5,\n  \"cashListing\" : \"cashListing\"\n}, {\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"checkNumber\" : 6,\n  \"depositNumber\" : 5,\n  \"checkAmount\" : 1.4658129805029452,\n  \"companyName\" : \"companyName\",\n  \"transmittalStatus\" : \"transmittalStatus\",\n  \"departmentDocumentNumber\" : 0,\n  \"checkDate\" : \"2000-01-23\",\n  \"transmittalNumber\" : 5,\n  \"cashListing\" : \"cashListing\"\n} ]";

            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<DepartmentDocumentSearchResponse>>(exampleJson)
            : default(List<DepartmentDocumentSearchResponse>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
