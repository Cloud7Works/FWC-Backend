/*
 * Revenue Management System
 *
 * Florida Fish and Wildlife Conservation Commision - Revenue Management System.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@fwc.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using FWC.RMS.WebApi.Attributes;
using FWC.RMS.WebApi.Security;
using Microsoft.AspNetCore.Authorization;
using FWC.RMS.ApplicationCore.Dto;

namespace FWC.RMS.WebApi.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DepartmentDocumentApiController : ControllerBase
    { 
        /// <summary>
        /// Create a Department Document record
        /// </summary>
        /// <param name="body">Department Document request payload</param>
        /// <param name="transmittalNumber">Transmittal Number</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Bad request</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/v2/transmittals/{transmittalNumber}/departmentDocuments")]
        [ValidateModelState]
        [SwaggerOperation("CreateDepartmentDocument")]
        [SwaggerResponse(statusCode: 200, type: typeof(DepartmentDocument), description: "successful operation")]
        public virtual IActionResult CreateDepartmentDocument([FromBody]DepartmentDocumentRequest body, [FromRoute][Required]long? transmittalNumber)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DepartmentDocument));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            string exampleJson = null;
            exampleJson = "{\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"checkNumber\" : 1,\n  \"comments\" : \"comments\",\n  \"checkAmount\" : 5.962133916683182,\n  \"companyName\" : \"companyName\",\n  \"dateTimeStamp\" : \"dateTimeStamp\",\n  \"departmentDocumentNumber\" : 0,\n  \"transmittalNumber\" : 6,\n  \"cashListing\" : \"cashListing\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<DepartmentDocument>(exampleJson)
                        : default(DepartmentDocument);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// get Department Document records
        /// </summary>
        /// <param name="transmittalNumber">Transmittal Number</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Bad request</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/v2/transmittals/{transmittalNumber}/departmentDocuments")]
        [ValidateModelState]
        [SwaggerOperation("GetDepartmentDocuments")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DepartmentDocument>), description: "successful operation")]
        public virtual IActionResult GetDepartmentDocuments([FromRoute][Required]long? transmittalNumber)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DepartmentDocument>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            string exampleJson = null;
            exampleJson = "[ {\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"checkNumber\" : 1,\n  \"comments\" : \"comments\",\n  \"checkAmount\" : 5.962133916683182,\n  \"companyName\" : \"companyName\",\n  \"dateTimeStamp\" : \"dateTimeStamp\",\n  \"departmentDocumentNumber\" : 0,\n  \"transmittalNumber\" : 6,\n  \"cashListing\" : \"cashListing\"\n}, {\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"checkNumber\" : 1,\n  \"comments\" : \"comments\",\n  \"checkAmount\" : 5.962133916683182,\n  \"companyName\" : \"companyName\",\n  \"dateTimeStamp\" : \"dateTimeStamp\",\n  \"departmentDocumentNumber\" : 0,\n  \"transmittalNumber\" : 6,\n  \"cashListing\" : \"cashListing\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DepartmentDocument>>(exampleJson)
                        : default(List<DepartmentDocument>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update a Department Document record
        /// </summary>
        /// <param name="body">DepartmentDocument request payload</param>
        /// <param name="transmittalNumber">Transmittal Number</param>
        /// <param name="departmentDocumentsNumber">Department Document Number</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Bad request</response>
        /// <response code="500">Internal server error</response>
        [HttpPatch]
        [Route("/v2/transmittals/{transmittalNumber}/departmentDocuments/{departmentDocumentsNumber}")]
        [ValidateModelState]
        [SwaggerOperation("UpdateDepartmentDocument")]
        [SwaggerResponse(statusCode: 200, type: typeof(DepartmentDocument), description: "successful operation")]
        public virtual IActionResult UpdateDepartmentDocument([FromBody]DepartmentDocumentRequest body, [FromRoute][Required]long? transmittalNumber, [FromRoute][Required]long? departmentDocumentsNumber)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DepartmentDocument));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            string exampleJson = null;
            exampleJson = "{\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"checkNumber\" : 1,\n  \"comments\" : \"comments\",\n  \"checkAmount\" : 5.962133916683182,\n  \"companyName\" : \"companyName\",\n  \"dateTimeStamp\" : \"dateTimeStamp\",\n  \"departmentDocumentNumber\" : 0,\n  \"transmittalNumber\" : 6,\n  \"cashListing\" : \"cashListing\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<DepartmentDocument>(exampleJson)
                        : default(DepartmentDocument);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
